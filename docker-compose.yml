version: '3.8'

services:
  # Status Dashboard
  status-dashboard:
    build:
      context: .
      dockerfile: Dockerfile.status
    ports:
      - "8082:8082"
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - PORT=8082
    volumes:
      - ./logs:/var/log/media-pipeline
      - ./config:/opt/media-pipeline/config
    networks:
      - media-pipeline

  # Configuration Interface
  config-interface:
    build:
      context: .
      dockerfile: Dockerfile.config
    ports:
      - "8083:8083"
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - PORT=8083
    volumes:
      - ./logs:/var/log/media-pipeline
      - ./config:/opt/media-pipeline/config
    networks:
      - media-pipeline

  # Media Pipeline Web UI
  media-pipeline-web:
    build:
      context: .
      dockerfile: Dockerfile.pipeline
    ports:
      - "8081:8081"
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - PORT=8081
    volumes:
      - ./logs:/var/log/media-pipeline
      - ./config:/opt/media-pipeline/config
      - ./data:/mnt/wd_all_pictures
    networks:
      - media-pipeline
    depends_on:
      - syncthing

  # Syncthing
  syncthing:
    image: syncthing/syncthing:latest
    ports:
      - "8384:8384"
      - "22000:22000/tcp"
      - "22000:22000/udp"
      - "21027:21027/udp"
    restart: unless-stopped
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=UTC
    volumes:
      - ./syncthing:/var/syncthing
      - ./data:/mnt/wd_all_pictures
    networks:
      - media-pipeline

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    restart: unless-stopped
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    networks:
      - media-pipeline
    depends_on:
      - status-dashboard
      - config-interface
      - media-pipeline-web
      - syncthing

  # VS Code Server (Optional)
  vscode:
    image: codercom/code-server:latest
    ports:
      - "8080:8080"
    restart: unless-stopped
    environment:
      - PASSWORD=your_password_here
    volumes:
      - ./vscode:/home/coder
      - ./:/workspace
    networks:
      - media-pipeline

  # Monitoring with Prometheus (Optional)
  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    restart: unless-stopped
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - ./prometheus-data:/prometheus
    networks:
      - media-pipeline

  # Grafana Dashboard (Optional)
  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    restart: unless-stopped
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - ./grafana-data:/var/lib/grafana
    networks:
      - media-pipeline

networks:
  media-pipeline:
    driver: bridge

volumes:
  logs:
  config:
  data:
  syncthing:
  vscode:
  prometheus-data:
  grafana-data:
